class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {
        std::vector<unsigned int> dp(target + 1, 0);
        dp[0] = 1; 

        for (int i = 1; i <= target; ++i) {
            for (int num : nums) {
                if (i - num >= 0) {
                    dp[i] += dp[i - num];
                }
            }
        }
        return dp[target];
    }

    int main(){

        std::vector<int> numsv;

        //process input
        std::string input;
        std::getline(std::cin,input);

        std::istringstream iss(input);
        int n;
        while(iss >> n){
            numsv.push_back(n);
        }

        //sort
        std::sort(numsv.begin(),numsv.end());

        //target
        int target;
        std::cin>>target;

        combinationSum4(numsv,target);
        return 0;
    }

};
