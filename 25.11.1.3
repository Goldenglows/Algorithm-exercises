/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *l, TreeNode *r) : val(x), left(l), right(r) {}
 * };
 */

class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if (!root) return true;
        return check(root->left, root->right);
    }
    
private:
    bool check(TreeNode* p, TreeNode* q) {
        // 都为空 → 对称
        if (!p && !q) return true;
        // 一个空一个非空 → 不对称
        if (!p || !q) return false;
        // 值不同 → 不对称
        if (p->val != q->val) return false;
        
        // 递归：左子的左 == 右子的右，左子的右 == 右子的左
        return check(p->left, q->right) && check(p->right, q->left);
    }
};
